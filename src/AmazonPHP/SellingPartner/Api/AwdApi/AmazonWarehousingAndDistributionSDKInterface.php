<?php

namespace AmazonPHP\SellingPartner\Api\AwdApi;

use AmazonPHP\SellingPartner\AccessToken;
use AmazonPHP\SellingPartner\Exception\ApiException;
use AmazonPHP\SellingPartner\Exception\InvalidArgumentException;
use Psr\Http\Message\RequestInterface;

/**
* The Selling Partner API for AWD
*
* The Selling Partner API for Amazon Warehousing and Distribution (AWD).
*
* The version of the OpenAPI document: 2024-05-09
*
* This class was auto-generated by https://openapi-generator.tech
* Do not change it, it will be overwritten with next execution of /bin/generate.sh
*/
interface AmazonWarehousingAndDistributionSDKInterface
{
    public const API_NAME = 'AmazonWarehousingAndDistribution';

    public const OPERATION_GETINBOUNDSHIPMENT = 'getInboundShipment';

    public const OPERATION_GETINBOUNDSHIPMENT_PATH = '/awd/2024-05-09/inboundShipments/{shipmentId}';
    public const OPERATION_LISTINBOUNDSHIPMENTS = 'listInboundShipments';

    public const OPERATION_LISTINBOUNDSHIPMENTS_PATH = '/awd/2024-05-09/inboundShipments';
    public const OPERATION_LISTINVENTORY = 'listInventory';

    public const OPERATION_LISTINVENTORY_PATH = '/awd/2024-05-09/inventory';

    /**
    * Operation getInboundShipment
    *
    * @param AccessToken $accessToken
    * @param string $region
    * @param string $shipment_id  ID for the shipment. A shipment contains the cases being inbounded. (required)
    *
    * @throws ApiException on non-2xx response
    * @throws InvalidArgumentException
    * @return \AmazonPHP\SellingPartner\Model\AmazonWarehousingAndDistribution\InboundShipment
    */
    public function getInboundShipment(AccessToken $accessToken, string $region, $shipment_id);
    /**
    * Operation listInboundShipments
    *
    * @param AccessToken $accessToken
    * @param string $region
    * @param string|null $sort_by  Field to sort results by. Required if &#x60;sortOrder&#x60; is provided. (optional)
    * @param string|null $sort_order  Sort the response in &#x60;ASCENDING&#x60; or &#x60;DESCENDING&#x60; order. (optional)
    * @param string|null $shipment_status  Filter by inbound shipment status. (optional)
    * @param \DateTimeInterface|null $updated_after  List the inbound shipments that were updated after a certain time (inclusive). The date must be in &lt;a href&#x3D;&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601&#39;&gt;ISO 8601&lt;/a&gt; format. (optional)
    * @param \DateTimeInterface|null $updated_before  List the inbound shipments that were updated before a certain time (inclusive). The date must be in &lt;a href&#x3D;&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601&#39;&gt;ISO 8601&lt;/a&gt; format. (optional)
    * @param int $max_results  Maximum number of results to return. (optional, default to 25)
    * @param string|null $next_token  Token to retrieve the next set of paginated results. (optional)
    *
    * @throws ApiException on non-2xx response
    * @throws InvalidArgumentException
    * @return \AmazonPHP\SellingPartner\Model\AmazonWarehousingAndDistribution\ShipmentListing
    */
    public function listInboundShipments(AccessToken $accessToken, string $region, $sort_by = null, $sort_order = null, $shipment_status = null, $updated_after = null, $updated_before = null, $max_results = 25, $next_token = null);
    /**
    * Operation listInventory
    *
    * @param AccessToken $accessToken
    * @param string $region
    * @param string|null $sku  Filter by seller or merchant SKU for the item. (optional)
    * @param string|null $sort_order  Sort the response in &#x60;ASCENDING&#x60; or &#x60;DESCENDING&#x60; order. (optional)
    * @param string|null $details  Set to &#x60;SHOW&#x60; to return summaries with additional inventory details. Defaults to &#x60;HIDE,&#x60; which returns only inventory summary totals. (optional)
    * @param string|null $next_token  Token to retrieve the next set of paginated results. (optional)
    * @param int $max_results  Maximum number of results to return. (optional, default to 25)
    *
    * @throws ApiException on non-2xx response
    * @throws InvalidArgumentException
    * @return \AmazonPHP\SellingPartner\Model\AmazonWarehousingAndDistribution\InventoryListing
    */
    public function listInventory(AccessToken $accessToken, string $region, $sku = null, $sort_order = null, $details = null, $next_token = null, $max_results = 25);
}
