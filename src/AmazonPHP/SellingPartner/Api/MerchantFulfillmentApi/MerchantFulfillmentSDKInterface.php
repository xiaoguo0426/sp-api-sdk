<?php

namespace AmazonPHP\SellingPartner\Api\MerchantFulfillmentApi;

use AmazonPHP\SellingPartner\AccessToken;
use AmazonPHP\SellingPartner\Exception\ApiException;
use AmazonPHP\SellingPartner\Exception\InvalidArgumentException;
use Psr\Http\Message\RequestInterface;

/**
* Selling Partner API for Merchant Fulfillment
*
* With the Selling Partner API for Merchant Fulfillment, you can build applications that sellers can use to purchase shipping for non-Prime and Prime orders using Amazon's Buy Shipping Services.
*
* The version of the OpenAPI document: v0
*
* This class was auto-generated by https://openapi-generator.tech
* Do not change it, it will be overwritten with next execution of /bin/generate.sh
*/
interface MerchantFulfillmentSDKInterface
{
    public const API_NAME = 'MerchantFulfillment';

    public const OPERATION_CANCELSHIPMENT = 'cancelShipment';

    public const OPERATION_CANCELSHIPMENT_PATH = '/mfn/v0/shipments/{shipmentId}';
    public const OPERATION_CREATESHIPMENT = 'createShipment';

    public const OPERATION_CREATESHIPMENT_PATH = '/mfn/v0/shipments';
    public const OPERATION_GETADDITIONALSELLERINPUTS = 'getAdditionalSellerInputs';

    public const OPERATION_GETADDITIONALSELLERINPUTS_PATH = '/mfn/v0/additionalSellerInputs';
    public const OPERATION_GETELIGIBLESHIPMENTSERVICES = 'getEligibleShipmentServices';

    public const OPERATION_GETELIGIBLESHIPMENTSERVICES_PATH = '/mfn/v0/eligibleShippingServices';
    public const OPERATION_GETSHIPMENT = 'getShipment';

    public const OPERATION_GETSHIPMENT_PATH = '/mfn/v0/shipments/{shipmentId}';

    /**
    * Operation cancelShipment
    *
    * @param AccessToken $accessToken
    * @param string $region
    * @param string $shipment_id  The Amazon-defined shipment identifier for the shipment to cancel. (required)
    *
    * @throws ApiException on non-2xx response
    * @throws InvalidArgumentException
    * @return \AmazonPHP\SellingPartner\Model\MerchantFulfillment\CancelShipmentResponse
    */
    public function cancelShipment(AccessToken $accessToken, string $region, $shipment_id);
    /**
    * Operation createShipment
    *
    * @param AccessToken $accessToken
    * @param string $region
    * @param \AmazonPHP\SellingPartner\Model\MerchantFulfillment\CreateShipmentRequest $body  Request schema for &#x60;CreateShipment&#x60; operation. (required)
    *
    * @throws ApiException on non-2xx response
    * @throws InvalidArgumentException
    * @return \AmazonPHP\SellingPartner\Model\MerchantFulfillment\CreateShipmentResponse
    */
    public function createShipment(AccessToken $accessToken, string $region, $body);
    /**
    * Operation getAdditionalSellerInputs
    *
    * @param AccessToken $accessToken
    * @param string $region
    * @param \AmazonPHP\SellingPartner\Model\MerchantFulfillment\GetAdditionalSellerInputsRequest $body  Request schema for the &#x60;GetAdditionalSellerInputs&#x60; operation. (required)
    *
    * @throws ApiException on non-2xx response
    * @throws InvalidArgumentException
    * @return \AmazonPHP\SellingPartner\Model\MerchantFulfillment\GetAdditionalSellerInputsResponse
    */
    public function getAdditionalSellerInputs(AccessToken $accessToken, string $region, $body);
    /**
    * Operation getEligibleShipmentServices
    *
    * @param AccessToken $accessToken
    * @param string $region
    * @param \AmazonPHP\SellingPartner\Model\MerchantFulfillment\GetEligibleShipmentServicesRequest $body  Request schema for GetEligibleShipmentServices operation. (required)
    *
    * @throws ApiException on non-2xx response
    * @throws InvalidArgumentException
    * @return \AmazonPHP\SellingPartner\Model\MerchantFulfillment\GetEligibleShipmentServicesResponse
    */
    public function getEligibleShipmentServices(AccessToken $accessToken, string $region, $body);
    /**
    * Operation getShipment
    *
    * @param AccessToken $accessToken
    * @param string $region
    * @param string $shipment_id  The Amazon-defined shipment identifier for the shipment. (required)
    *
    * @throws ApiException on non-2xx response
    * @throws InvalidArgumentException
    * @return \AmazonPHP\SellingPartner\Model\MerchantFulfillment\GetShipmentResponse
    */
    public function getShipment(AccessToken $accessToken, string $region, $shipment_id);
}
